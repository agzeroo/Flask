# 플라스크 기본 구성
# 1. 모듈 가져오기
from flask import Flask

# 2. 앱 생성(flask 객체)
# 파이썬에서 제공하는 전역 변수 : __name__
# 직접 구동하면 코드에서는 "__main__" 리턴, 다른 모듈에서 가져와서 구동 "파일명"
print(__name__)
app = Flask(__name__)

# 3. 라우팅
# 클라이언트가 요청을 하면, 서버측에서 누가 대응할것인가 이 패턴을 정하는 포지션
# 기획시 => 웹 서비스상에 총 페이지를 정의(기획)해서 해당 개수만큼 라우팅 구현
# 만약에 페이지가 기능별로 나눠져 있다면 Blueprint를 적용해서 기능별로 분류를 나눈다
# ex) 회원관련기능(~/user/~), 메인서비스기능(~/main/~), 기타정보제공페이지(~/etc/~)
# 파이썬 함수의 고급기능 -> 데코레이터 문법을 적용 (클로저:함수안에 함수가 존재)
# @app.route('URL', methods=['GET','POST'], ...)
# 홈페이지를 잡겟다 이러서 표현되는 함수에서 처리하겟다


@app.route('/')
def home():
    return 'home page 4'


# 4. 서버가동
if __name__ == '__main__':
    # 엔트리포인트, 코드 작동의 시작점 기술
    # 모듈의 관점에서는 테스트 코드를 작성할때 활용
    # 서버 가동
    # debug=True 를 설정하면, 코드 수정 => 저장 => 서버 자동재가동 => 새로고침
    app.run(debug=True)
    pass
